# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  id: String!
  category: CategoryEnum!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""Different types of categories"""
enum CategoryEnum {
  FRUITS
  VEGETABLES
  GRAINS
  NUTS
  SEEDS
  LEGUMES
  HERBS_SPICES
  DAIRY
  EGGS
  MEAT
  SEAFOOD
  BAKED_GOODS
  BEVERAGES
  PROCESSED
  OTHER
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Unit {
  id: String!
  name: UnitEnum!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""Different types of units"""
enum UnitEnum {
  KG
  GRAM
  POUND
  OUNCE
  LITER
  MILLILITER
  BUSHEL
  CRATE
  BOX
  BAG
  BUNCH
  DOZEN
  UNIT
  PACK
  TRAY
  OTHER
}

type Product {
  id: String!
  productName: String!
  description: String!
  price: Float!
  country: String!
  currency: String!
  quantityAvailable: Float!
  expiryDate: DateTime!
  startDate: DateTime!
  media: [String!]!
  status: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Account {
  id: String!
  fullName: String!
  email: String!
  password: String!
  accountType: AccountType!
  phone: String!
  locationLat: Float
  locationLon: Float
  ratingAverage: Float!
  reviewsCount: Float!
  createdAt: DateTime
  updatedAt: DateTime
}

"""Different types of accounts"""
enum AccountType {
  FARMER
  RESTAURANT
  CONSUMER
  CHARITY
  ADMIN
}

type PaginationMeta {
  itemCount: Float!
  totalItems: Float!
  itemsPerPage: Float!
  totalPages: Float!
  currentPage: Float!
}

type PaginatedProducts {
  items: [Product!]!
  meta: PaginationMeta!
}

type Query {
  products(page: Float!, limit: Float!, filter: CreateProductFilterInput): PaginatedProducts!
  categories: [Category!]!
}

input CreateProductFilterInput {
  productName: String
  categoryId: String
  unitId: String
  description: String
  price: Float
  country: String
  quantityAvailable: Float
  expiryDate: DateTime
  startDate: DateTime
  id: String
  priceGte: Float
  priceLte: Float
  quantityAvailableGte: Float
  quantityAvailableLte: Float
  expiryDateGte: DateTime
  expiryDateLte: DateTime
}

type Mutation {
  createProductReservationRequest(input: ReserveProductTaskPayload!): String!
  addProduct(input: CreateProductInput!): Product!
  createAccount(input: CreateAccountInput!): Account!
  createCategory(input: CreateCategoryInput!): Product!
  createUnit(input: CreateUnitInput!): Unit!
}

input ReserveProductTaskPayload {
  productId: String!
  accountId: String!
  count: Int!
}

input CreateProductInput {
  productName: String!
  categoryId: String!
  unitId: String!
  description: String!
  price: Float!
  country: String!
  quantityAvailable: Float!
  expiryDate: DateTime!
  startDate: DateTime!
}

input CreateAccountInput {
  fullName: String!
  email: String!
  password: String!
  accountType: AccountType! = CONSUMER
  phone: String!
  locationLat: Float
  locationLon: Float
  ratingAverage: Float! = 0
  reviewsCount: Int! = 0
}

input CreateCategoryInput {
  category: CategoryEnum!
}

input CreateUnitInput {
  name: UnitEnum!
}